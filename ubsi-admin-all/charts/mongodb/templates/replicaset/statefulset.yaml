{{- if eq .Values.architecture "replicaset" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ubsi-mongo
spec:
  {{- if .Values.service.name }}
  serviceName: "{{ .Values.service.name }}"
  {{- else }}
  serviceName: ubsi-mongo-svc
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: ubsi-mongo
  template:
    metadata:
      labels:
        app: ubsi-mongo
    spec:
      containers:
        - name: mongo
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          ports:
            - containerPort: 27017
              name: mongodb
          command: ["sh"]
          args:
            - "-c"
            - |
              set -ex
              mongod --config /data/configdb/mongod_rs.conf
              sleep infinity              
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: conf
              mountPath: /data/configdb
              readOnly: false
            - name: mongo-data
              mountPath: /data
              readOnly: false
      volumes:
        - name: conf
          configMap:
            name: ubsi-mongo-cm
            defaultMode: 0600
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
	  {{- if .Values.persistence.storageClass }}
          storageClassName: "{{ .Values.persistence.storageClass }}"
	  {{- end }}
{{- end }}