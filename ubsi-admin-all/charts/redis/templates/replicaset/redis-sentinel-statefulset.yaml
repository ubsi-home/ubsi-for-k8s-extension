{{- if eq .Values.architecture "replicaset" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-sentinel
  #namespace: public-service
  labels:
    app: redis-sentinel
spec:
  selector:
    matchLabels:
      app: redis-sentinel
  #与redis-service.yaml中的保持一致
  {{- if .Values.service.name }}
  serviceName: "{{ .Values.service.name }}-sentinel"
  {{- else }}
  serviceName: redis-sentinel-svc
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      initContainers:
      - name: init-redis-sentinel
        image: redis:latest
        command: 
        - bash
        - "-c"
        - |
          set -ex
          cp /mnt/config-map/sentinel.conf /conf/redis-sentinel.conf
        volumeMounts:
        - name: redis-sentinel-data
          mountPath: /conf
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: redis-sentinel
        image: redis:6.2.5
        command: ["redis-sentinel"]
        args:
          - "/conf/redis-sentinel.conf"
        ports:
        - name: redis-sentinel
          containerPort: 26379
        volumeMounts:
        - name: data
          mountPath: /data/redis
        - name: redis-sentinel-data
          mountPath: /conf
        resources:
          requests:
            cpu: 100m
            memory: 256m
      volumes:
      - name: config-map
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
  - metadata: 
      name: redis-sentinel-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Mi
      {{- if .Values.persistence.storageClass }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
{{- end }}